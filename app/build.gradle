plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'de.mannodermaus.android-junit5'
    id 'org.jlleitschuh.gradle.ktlint'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
    id "com.diffplug.spotless" version "6.11.0"
    id "com.ncorti.ktfmt.gradle"
    id 'com.github.triplet.play'
}

ktlint {
    android = true
    outputToConsole = true
    ignoreFailures = true
    reporters {
        reporter "checkstyle"
    }
}

kapt {
    arguments {
        arg("room.schemaLocation", "$projectDir/schemas".toString())
    }
}

android {
    signingConfigs {
        debug {
            storePassword 'develop'
            keyPassword 'develop'
            storeFile file('../key/develop.jks')
            keyAlias 'develop'
        }
        release {
            storeFile file('../key/release.jks')
            storePassword 'chekera0127'
            keyPassword 'chekera0127'
            keyAlias 'key0'
        }
    }
    compileSdk 33

    defaultConfig {
        applicationId "com.app.calendar"
        minSdk 26
        targetSdk 33
        versionCode 15
        versionName "1.15.0"
        applicationId "com.app.body_manage"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    dataBinding {
        enabled true
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.4.0'
    }
    testOptions {
        unitTests.all {
            useJUnitPlatform()
        }
    }
}

play {
    track = 'internal'
    serviceAccountCredentials.set(file("../key/play-service-key.json"))
}

spotless { // if you are using build.gradle.kts, instead of 'spotless {' use:
    kotlin {
        target '**/*.kt'
        targetExclude("$buildDir/**/*.kt")
        targetExclude('bin/**/*.kt')
        ktlint("0.45.2")
    }
}

dependencies {
    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.appcompat:appcompat:1.6.0'
    implementation 'com.google.android.material:material:1.7.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

    // lifecycle
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1"

    // CameraX core library using the camera2 implementation
    def camerax_version = "1.3.0-alpha02"
    implementation "androidx.camera:camera-core:${camerax_version}"
    implementation "androidx.camera:camera-camera2:${camerax_version}"
    implementation "androidx.camera:camera-lifecycle:${camerax_version}"
    implementation "androidx.camera:camera-view:${camerax_version}"

    // Room
    def room_version = "2.5.0"
    implementation "androidx.room:room-ktx:$room_version"
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

    // Kotlin components
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.5.2"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4"
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.2'

    // 画像加工
    implementation 'com.makeramen:roundedimageview:2.3.0'

    // ロガー
    implementation 'com.jakewharton.timber:timber:5.0.1'

    // Compose
    implementation 'androidx.compose.ui:ui:1.1.1'
    // Tooling support (Previews, etc.)
    implementation 'androidx.compose.ui:ui-tooling:1.1.1'
    // Foundation (Border, Background, Box, Image, Scroll, shapes, animations, etc.)
    implementation 'androidx.compose.foundation:foundation:1.2.0-beta02'
    // Material Design
    implementation 'androidx.compose.material:material:1.1.1'
    // Material design icons
    implementation 'androidx.compose.material:material-icons-core:1.1.1'
    implementation 'androidx.compose.material:material-icons-extended:1.1.1'
    // Integration with activities
    implementation 'androidx.activity:activity-compose:1.6.1'
    // Integration with ViewModels
    implementation 'androidx.lifecycle:lifecycle-viewmodel-compose:2.5.1'
    // Integration with observables
    implementation 'androidx.compose.runtime:runtime-livedata:1.3.3'
    implementation "com.google.accompanist:accompanist-pager:0.25.0"
    implementation "com.google.accompanist:accompanist-pager-indicators:0.24.11-rc"
    implementation "androidx.coordinatorlayout:coordinatorlayout:1.2.0"

    // Junit5
    testImplementation "org.junit.jupiter:junit-jupiter-api:5.8.2"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.8.2"
    testImplementation "androidx.arch.core:core-testing:2.1.0"
    testImplementation "io.mockk:mockk:1.13.2"
    // 画像
    implementation("io.coil-kt:coil-compose:2.2.0")

    // Text feature
    implementation 'com.google.android.gms:play-services-mlkit-text-recognition:18.0.2'
    implementation 'com.google.mlkit:text-recognition-japanese:16.0.0-beta6'

    // graph
    implementation 'com.github.PhilJay:MPAndroidChart:v3.1.0'

    // Preferences DataStore
    implementation "androidx.datastore:datastore-preferences:1.0.0"
    // Proto DataStore
    implementation "androidx.datastore:datastore-core:1.0.0"

    implementation platform('com.google.firebase:firebase-bom:30.3.2')
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation 'com.google.firebase:firebase-crashlytics-ktx'

    // module-level build.gradle
    implementation "io.github.boguszpawlowski.composecalendar:composecalendar:0.6.0"
}

tasks.withType(org.jlleitschuh.gradle.ktlint.tasks.GenerateReportsTask) {
    reportsOutputDirectory = project.layout.buildDirectory.dir("other/location/$name")
}